
==================== FINAL INTERFACE ====================
2019-06-11 02:38:12.18998526 UTC

interface main:Paths_fractal 8065
  interface hash: c881c7f6ccc9f1d9726dbb2493178489
  ABI hash: a3e25c884c00f75fe7a15f28208eda98
  export-list hash: a5810ae22307531956ee815c62320ecf
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4adb03d1563e2d160bf5188f2910fbea
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_fractal.getBinDir
  Paths_fractal.getDataDir
  Paths_fractal.getDataFileName
  Paths_fractal.getDynLibDir
  Paths_fractal.getLibDir
  Paths_fractal.getLibexecDir
  Paths_fractal.getSysconfDir
  Paths_fractal.version
module dependencies:
package dependencies: base-4.12.0.0* ghc-prim-0.5.3
                      integer-gmp-1.0.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity base-4.12.0.0:Data.Monoid
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
import  -/  base-4.12.0.0:Control.Exception 041da5b6267cf6b639ff5716d5b299a9
import  -/  base-4.12.0.0:Data.Version b91365c9d28e06272e2a2db7656d57ee
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.IO.Exception 77722984940ee6ccf9e2f7dab10b83a4
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.Environment c54e0d0308e729fdace6bc37aa74bb52
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
addDependentFile "/home/lezoraig/.stack/programs/x86_64-linux/ghc-tinfo6-8.6.5/lib/ghc-8.6.5/include/ghcversion.h" 43db44f9bb88490c2fa995e5f5ec33f2
addDependentFile ".stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/fractal-exe/autogen/cabal_macros.h" cb1d928444f4c21b59fd53c998745914
addDependentFile "/usr/include/stdc-predef.h" fec7b46f61d668320d9c12d59cb39078
7379700a55df1801af36b6ec71f2b33b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_fractal.$trModule3
                   Paths_fractal.$trModule1) -}
c7191535cc9ccc3899a1dc034313844c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_fractal.$trModule2) -}
247ada6e1b244ec8829305f2d6e5f67f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_fractal"#) -}
74dc1c6f1d402cd5b958c5409aaade38
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_fractal.$trModule4) -}
7b53efc80df428580b515feb64137fdf
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
83125695c080f72d3a75990007b9cb85
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
de0d9d839c76312ab43d876cf33ecf41
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_fractal.getBinDir5
                   Paths_fractal.getBinDir2
                   eta) -}
e8ca3899af96a1019ed11ebcfd014682
  getBinDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_fractal.getBinDir3 #) } }) -}
e8687cf20206e6fcb20c66339de6fd3a
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getBinDir4) -}
979ea50f166d6486da7891fab4e79964
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/lezoraig/Bureau/Fractal/.stack-work/install/x86_64-linux-tinfo6/lts-13.24/8.6.5/bin"#) -}
6b837c1a548f95920e201ee1b55df410
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Paths_fractal.getBinDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> System.Environment.getEnv2 Paths_fractal.getBinDir6 ipv2
                   GHC.Maybe.Just x -> (# ipv2, x #) } } }) -}
246761cf958bb6b75dbdf7b692140b94
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getBinDir7) -}
ac30c575393a270160fa58a0caaea73f
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fractal_bindir"#) -}
025063b3e0638b6e94498049fff6579e
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
6b889574921831ac167d00eaebaf412a
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_fractal.getDataDir5
                   Paths_fractal.getDataDir2
                   eta) -}
3eb21a4afea7056f25c052d9f014be70
  getDataDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_fractal.getDataDir3 #) } }) -}
93e197b1a957b7da6ff342dc5a5dbc5d
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getDataDir4) -}
f55525ea67cca1e916a9ec15dd30d7bb
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/lezoraig/Bureau/Fractal/.stack-work/install/x86_64-linux-tinfo6/lts-13.24/8.6.5/share/x86_64-linux-ghc-8.6.5/fractal-0.1.0.0"#) -}
1ac8af2bef626bcce47f3997723be944
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Paths_fractal.getDataDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> System.Environment.getEnv2 Paths_fractal.getDataDir6 ipv2
                   GHC.Maybe.Just x -> (# ipv2, x #) } } }) -}
2ac48bb933b13eaf47d6260117b55330
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getDataDir7) -}
ccd530652142340e29a7ef1c584867f7
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fractal_datadir"#) -}
cb1ce81622bf7deec47cb0487f6bd8c7
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
69a125fe2b8728ef6e7421d3364d00cb
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.Type.SomeException
                        Paths_fractal.getDataDir5
                        Paths_fractal.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_fractal.getDataFileName2
                         name) #) }) -}
7e226b78348f6c6e0080f306936b26a2
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
fb752fb355714ec2dd586ad512394dbe
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
a75979639aa92ff2c59760a0b9082a47
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_fractal.getDynLibDir5
                   Paths_fractal.getDynLibDir2
                   eta) -}
8459464453da2eda65ebddfd4cc38feb
  getDynLibDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_fractal.getDynLibDir3 #) } }) -}
c08da0b8667d6925126e6459d06accc7
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getDynLibDir4) -}
581f07feeca84d5e8c26eb6f1b545d86
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/lezoraig/Bureau/Fractal/.stack-work/install/x86_64-linux-tinfo6/lts-13.24/8.6.5/lib/x86_64-linux-ghc-8.6.5"#) -}
1c3aeb21b702eb5829e46e796543a7c0
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Paths_fractal.getDynLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> System.Environment.getEnv2 Paths_fractal.getDynLibDir6 ipv2
                   GHC.Maybe.Just x -> (# ipv2, x #) } } }) -}
1df7e1c52a57c6b8b1e18d4604a2d486
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getDynLibDir7) -}
a7bfa3fcde0d12bbc897cc8eac10e8a0
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fractal_dynlibdir"#) -}
2755d7c55b872ad484814d1ee0652e4e
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
faad6d67e021d84b79ad46ffc57ca765
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_fractal.getLibDir5
                   Paths_fractal.getLibDir2
                   eta) -}
79affddee09d8a7c89414a3082419696
  getLibDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_fractal.getLibDir3 #) } }) -}
d601a28114ec19fbf848b462e76c97a4
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getLibDir4) -}
9fce34e83728275db637171f31fbf82c
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/lezoraig/Bureau/Fractal/.stack-work/install/x86_64-linux-tinfo6/lts-13.24/8.6.5/lib/x86_64-linux-ghc-8.6.5/fractal-0.1.0.0-AjdcPRwOLWt7Fko8f9r16P-fractal-exe"#) -}
97aa38af5091ec86f611f6a82599db18
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Paths_fractal.getLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> System.Environment.getEnv2 Paths_fractal.getLibDir6 ipv2
                   GHC.Maybe.Just x -> (# ipv2, x #) } } }) -}
35fb82ca07f17fad9a5ecda23dc116a3
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getLibDir7) -}
e752f4b565b2771113c3e0b5988f3682
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fractal_libdir"#) -}
c4878a441562d4a2fa6556523f0300fc
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
72d5e30ae56dc7305b907ca4cb5811a6
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_fractal.getLibexecDir5
                   Paths_fractal.getLibexecDir2
                   eta) -}
38444eec707815f55587bb054144f22d
  getLibexecDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_fractal.getLibexecDir3 #) } }) -}
98b7116766047367944713b881bbd3ed
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getLibexecDir4) -}
63e6828d047b06741078f2874bcf6af1
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/lezoraig/Bureau/Fractal/.stack-work/install/x86_64-linux-tinfo6/lts-13.24/8.6.5/libexec/x86_64-linux-ghc-8.6.5/fractal-0.1.0.0"#) -}
4273c280516470b89ba1b7017858e61b
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Paths_fractal.getLibexecDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> System.Environment.getEnv2 Paths_fractal.getLibexecDir6 ipv2
                   GHC.Maybe.Just x -> (# ipv2, x #) } } }) -}
0a04f6259febd33d4142b05fe9c7b27c
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getLibexecDir7) -}
e4bb314249007f01e3784a9a9ffc1445
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fractal_libexecdir"#) -}
9894978b3509b9b5f758f1afb9296d30
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_fractal.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
422f91bc679ec2123add2757bc9dee9f
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_fractal.getSysconfDir5
                   Paths_fractal.getSysconfDir2
                   eta) -}
60247d99188b8fd1a812f4c65eb0bd33
  getSysconfDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_fractal.getSysconfDir3 #) } }) -}
18ae466f6a46328d9c9469a3f7629e70
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getSysconfDir4) -}
84a3123d37d80321d26bcf5511c00565
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/lezoraig/Bureau/Fractal/.stack-work/install/x86_64-linux-tinfo6/lts-13.24/8.6.5/etc"#) -}
eb21c452cc0c2d0f6df469c92b1ca0ee
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Paths_fractal.getSysconfDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> System.Environment.getEnv2 Paths_fractal.getSysconfDir6 ipv2
                   GHC.Maybe.Just x -> (# ipv2, x #) } } }) -}
b256bb37ac961908126ba04604f27fc5
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_fractal.getSysconfDir7) -}
096558cca425609e2bf7b5f3d503932c
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fractal_sysconfdir"#) -}
56dc98a10575d7f90597a1a886bb1274
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_fractal.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
3102bbadbd3dbe7ca724703cbc0df8b2
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_fractal.version5
                   Paths_fractal.version2) -}
b2b5f0ee1eb4a62fe80c38f7690f293c
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_fractal.version6
                   Paths_fractal.version3) -}
f9caecede88f3dcdbfc1a7dab9319254
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_fractal.version5
                   Paths_fractal.version4) -}
1c37f2c5e623068cd6ea51a123ca45b8
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_fractal.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
38b885ba8c1a11a96bb63ba4964c9c48
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
449c0dea45d15c44237a0705499c6291
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

